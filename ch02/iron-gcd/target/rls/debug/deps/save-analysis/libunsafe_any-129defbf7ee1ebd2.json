{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"unsafe_any","disambiguator":[16285287634142301430,8585155688434598233]},"crate_root":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src","external_crates":[{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7077754580024123521,13856292029401878288]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6016022085005886096,12005306918091779657]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5617134566051653688,10443254050627773842]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[16564394648289164952,13294494894036814600]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[1276829831009500699,11413131735708263395]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2626251015139972758,1587450014087616387]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18033547342677267027,8220148051458886661]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[3353078648453965135,15750170180301417882]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[14070960876653492761,1302698196678272568]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","num":10,"id":{"name":"traitobject","disambiguator":[17863892143488501638,1641915404051850741]}}],"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5153,"line_start":1,"line_end":154,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5153,"line_start":1,"line_end":154,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/unsafe-any-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":24},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46}],"decl_id":null,"docs":" Traits for unsafe downcasting from trait objects to & or &mut references of\n concrete types. These should only be used if you are absolutely certain of the\n type of the data in said trait object - there be dragons etc.","sig":null,"attributes":[{"value":"deny(missing_docs, warnings)","span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":547,"byte_end":556,"line_start":17,"line_end":17,"column_start":11,"column_end":20},"name":"UnsafeAny","qualname":"::UnsafeAny","value":"UnsafeAny: Any","parent":null,"children":[],"decl_id":null,"docs":" A trait providing unchecked downcasting to its contents when stored\n in a trait object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":832,"byte_end":854,"line_start":26,"line_end":26,"column_start":19,"column_end":41},"name":"downcast_ref_unchecked","qualname":"<UnsafeAny>::downcast_ref_unchecked","value":"fn <T> (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained value, assuming that it is of type `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1158,"byte_end":1180,"line_start":35,"line_end":35,"column_start":19,"column_end":41},"name":"downcast_mut_unchecked","qualname":"<UnsafeAny>::downcast_mut_unchecked","value":"fn <T> (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value, assuming that it is of type `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1475,"byte_end":1493,"line_start":44,"line_end":44,"column_start":19,"column_end":37},"name":"downcast_unchecked","qualname":"<UnsafeAny>::downcast_unchecked","value":"fn <T> (self: Box<UnsafeAny>) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a the contained value, assuming that it is of type `T`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1736,"byte_end":1748,"line_start":51,"line_end":51,"column_start":18,"column_end":30},"name":"UnsafeAnyExt","qualname":"::UnsafeAnyExt","value":"UnsafeAnyExt","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30}],"decl_id":null,"docs":" An extension trait for unchecked downcasting of trait objects.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1964,"byte_end":1986,"line_start":57,"line_end":57,"column_start":15,"column_end":37},"name":"downcast_ref_unchecked","qualname":"::UnsafeAnyExt::downcast_ref_unchecked","value":"fn <T> (&self) -> &T","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Returns a reference to the contained value, assuming that it is of type `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2286,"byte_end":2308,"line_start":66,"line_end":66,"column_start":15,"column_end":37},"name":"downcast_mut_unchecked","qualname":"::UnsafeAnyExt::downcast_mut_unchecked","value":"fn <T> (&mut self) -> &mut T","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value, assuming that it is of type `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2599,"byte_end":2617,"line_start":75,"line_end":75,"column_start":15,"column_end":33},"name":"downcast_unchecked","qualname":"::UnsafeAnyExt::downcast_unchecked","value":"fn <T> (self: Box<Self>) -> Box<T>","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Returns a the contained value, assuming that it is of type `T`.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":592,"byte_end":593,"line_start":18,"line_end":18,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":603,"byte_end":612,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2795,"byte_end":2798,"line_start":81,"line_end":81,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2832,"byte_end":2841,"line_start":82,"line_end":82,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":558,"byte_end":561,"line_start":17,"line_end":17,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2714},"to":{"krate":0,"index":12}},{"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":592,"byte_end":593,"line_start":18,"line_end":18,"column_start":28,"column_end":29},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":19},"to":{"krate":0,"index":12}},{"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":603,"byte_end":612,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":12},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2795,"byte_end":2798,"line_start":81,"line_end":81,"column_start":30,"column_end":33},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":2,"index":2714},"to":{"krate":0,"index":24}},{"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,115,97,102,101,45,97,110,121,45,48,46,52,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2832,"byte_end":2841,"line_start":82,"line_end":82,"column_start":30,"column_end":39},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":12},"to":{"krate":0,"index":24}}]}